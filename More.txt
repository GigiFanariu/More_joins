CREATE TABLE MEAL (
  NAME VARCHAR(255),
  CALORIES INT,
  PRICE INT
  );
  
  INSERT INTO MEAL (NAME, CALORIES, PRICE)
  VALUES('Pasta Pesto', 799, 22.00);
  
    INSERT INTO MEAL (NAME, CALORIES, PRICE)
  VALUES('Pollo Grill', 750, 13.00);
  
    INSERT INTO MEAL (NAME, CALORIES, PRICE)
  VALUES('Lasagna', 1200, 15.00);
  
  
CREATE TABLE INGREDIENT (
  NAME VARCHAR(255),
  CONTAINS_LACTOSE BOOLEAN,
  VEGETARIAN BOOLEAN,
  VEGAN BOOLEAN,
  GLUTEN_FREE BOOLEAN,
  CALORIES INT,
  PRICE INT
);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE, PRICE) 
VALUES ('Eggs', false, true, false, true, 3.00);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE, PRICE) 
VALUES ('Bread', false, true, true, false, 1.80);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE, PRICE) 
VALUES ('Beef Patty', false, false, false, true, 9.99);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE, PRICE) 
VALUES ('Lettuce', false, true, true, true, 2.00);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE, PRICE) 
VALUES ('Yoghurt', true, true, false, true, 5.00);

CREATE TABLE CHEAP_MEALS (
  NAME VARCHAR(255),
  CALORIES INT,
  PRICE INT
  );
  INSERT INTO CHEAP_MEALS(NAME, CALORIES, PRICE)
  VALUES('Omelette', 600, 8.50);
  
    INSERT INTO CHEAP_MEALS(NAME, CALORIES, PRICE)
  VALUES('Salad', 200, 5.50);
  
    INSERT INTO CHEAP_MEALS(NAME, CALORIES, PRICE)
  VALUES('Toast', 350, 6.00);
  
  CREATE TABLE VEGAN_INGREDIENT AS 
SELECT * FROM INGREDIENT WHERE FALSE;

INSERT INTO VEGAN_INGREDIENT (NAME, VEGAN)
VALUES ('RICE', 1);

INSERT INTO VEGAN_INGREDIENT (NAME, VEGAN)
VALUES ('TOFU', 1);

INSERT INTO VEGAN_INGREDIENT (NAME, VEGAN)
VALUES ('SOIA', 1);

CREATE VIEW EXPENSIVE_MEAL AS SELECT * FROM MEAL 
WHERE PRICE > 15;

CREATE VIEW LACTOSE_FREE_INGREDIENT AS SELECT * FROM INGREDIENT
WHERE !CONTAINS_LACTOSE;

CREATE TABLE HIGH_CALORIE_MEAL AS SELECT * FROM MEAL
WHERE CALORIES > 650;

CREATE TABLE INGREDIENTS (
    ingredient_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(50) NOT NULL,
    supplier_id INT UNIQUE,
    PRIMARY KEY (ingredient_id),
    FOREIGN KEY (supplier_id) 
  REFERENCES SUPPLIERS(supplier_id)
);


RUN CODE:

SELECT DISTINCT M.NAME
FROM MEAL M
JOIN INGREDIENT I ON M.NAME = I.NAME
WHERE I.NAME = 'Garlic';

SELECT COUNT(DISTINCT M.NAME) AS num_vegetarian_meals
FROM MEAL M
JOIN INGREDIENT I ON M.NAME = I.NAME
WHERE I.VEGETARIAN = true;

SELECT DISTINCT M.NAME
FROM MEAL M
JOIN INGREDIENT I ON M.NAME = I.NAME
WHERE I.GLUTEN_FREE = true
  AND I.VEGAN = true;

SELECT AVG(ingredient_count) AS avg_ingredients_per_meal
FROM (
  SELECT M.NAME, COUNT(I.NAME) AS ingredient_count
  FROM MEAL M
  JOIN INGREDIENT I ON M.NAME = I.NAME
  GROUP BY M.NAME
) AS ingredient_counts;

SELECT M.NAME
FROM MEAL M
JOIN (
  SELECT M.NAME, COUNT(I.NAME) AS ingredient_count
  FROM MEAL M
  JOIN INGREDIENT I ON M.NAME = I.NAME
  GROUP BY M.NAME
) AS ingredient_counts ON M.NAME = ingredient_counts.NAME
WHERE ingredient_counts.ingredient_count > 3;

SELECT C.NAME, O.ORDER_DATE, O.TOTAL_COST
FROM CUSTOMER C
INNER JOIN "ORDER" O ON C.CUSTOMER_ID = O.CUSTOMER_ID;

SELECT P.NAME, I.QUANTITY
FROM PRODUCT P
INNER JOIN INVENTORY I ON P.PRODUCT_ID = I.PRODUCT_ID;